#include <stdio.h>

void roundRobin(int n, int arrival[], int burst[], int quantum) {
    int remaining[n], completion[n], turnaround[n], waiting[n];
    int time = 0, completed = 0;


    for (int i = 0; i < n; i++) {
        remaining[i] = burst[i];
    }

    while (completed < n) {
        int done = 1;
        for (int i = 0; i < n; i++) {
            if (remaining[i] > 0 && arrival[i] <= time) {
                done = 0;
                if (remaining[i] > quantum) {
                    time += quantum;
                    remaining[i] -= quantum;
                } else {
                    time += remaining[i];
                    completion[i] = time;
                    turnaround[i] = completion[i] - arrival[i];
                    waiting[i] = turnaround[i] - burst[i];
                    remaining[i] = 0;
                    completed++;
                }
            }
        }
        if (done) time++;
    }

    
    float totalTAT = 0, totalWT = 0;
    printf("\nProcess  Arrival  Burst  Completion  Turnaround  Waiting\n");
    for (int i = 0; i < n; i++) {
        printf("  P%d       %d       %d        %d         %d        %d\n",
               i + 1, arrival[i], burst[i], completion[i], turnaround[i], waiting[i]);
        totalTAT += turnaround[i];
        totalWT += waiting[i];
    }
    printf("\nAverage Turnaround Time: %.2f", totalTAT / n);
    printf("\nAverage Waiting Time: %.2f\n", totalWT / n);
}

int main() {
    int n, quantum;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    int arrival[n], burst[n];

    printf("Enter process details (Arrival Time and Burst Time):\n");
    for (int i = 0; i < n; i++) {
        printf("Process %d Arrival Time: ", i + 1);
        scanf("%d", &arrival[i]);
        printf("Process %d Burst Time: ", i + 1);
        scanf("%d", &burst[i]);
    }

    printf("Enter Time Quantum: ");
    scanf("%d", &quantum);

    roundRobin(n, arrival, burst, quantum);

    return 0;
} 
OUTPUT:
Enter the number of processes: 4
Enter process details (Arrival Time and Burst Time):
Process 1 Arrival Time: 0
Process 1 Burst Time: 3
Process 2 Arrival Time: 1
Process 2 Burst Time: 2
Process 3 Arrival Time: 2
Process 3 Burst Time: 4
Process 4 Arrival Time: 3
Process 4 Burst Time: 5
Enter Time Quantum: 2

Process  Arrival  Burst  Completion  Turnaround  Waiting
  P1       0       3        9         9        6
  P2       1       2        4         3        1
  P3       2       4        11         9        5
  P4       3       5        14         11        6

Average Turnaround Time: 8.00
Average Waiting Time: 4.50

Process returned 0 (0x0)   execution time : 28.518 s
Press any key to continue.


